Overloading constructors

  -Classes cna have as many constructors as necessary
  -Each must have a unique signature
  -Default constructor is no longer compiler-generated once another constructor is declared

--------------------------------------------------------------------------------------
e.g.
  class Player {
  private:
    std::string name;
    int health;
    int xp;
  public:
    //overloaded constructors
    Player();
    Player(std::string name_val);
    Player(std::string name_val, int health_val, int xp_val);
  };

  Player::Player(){
    name = "None";
    health = 0;
    xp = 0;
  }

  Player::Player(std::string name_val){
    name = name_val;
    health = 0;
    xp = 0;
  }

  Player::Player(std::string name_val, int health_val, int xp_val) {
    name = name_val;
    health = health_val;
    xp = xp_val;
  }

  Player empty; //None, 0, 0
  Player hero{"hero"; //Hero, 0 ,0
  Player villain{"Villain"}; //Villain, 0, 0

  Player frank {"Frank", 100, 4}; //Frank, 100, 4

  Player *enemy = new Player("Enemy", 1000, 0); //Enemy, 100, 0
  delete enemy;
