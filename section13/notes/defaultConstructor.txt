Default constructor
  
  -Does not expect any arguments
    -Also called the no-args constructor

  -If you write no contructors at all for a class
    -C++ will generate a Default constructor that does nothing

  -Called when you instance a new object with no arguments

  Player frank;
  Player *enemy = new Player;

---------------------------------------------------------------------------------------
Account - using default constructor

  class Account {
  private:
    std::string name;
    double balance;
  public:
    bool withdraw(double amount);
    bool deposit(double amount);
  };

  Account frank_account;
  Account jim_account;

  Account *mary_account = new Account;
  delete mary_account;

---------------------------------------------------------------------------------------
Account - user-defined no-args constructor

  class Account {
  private:
    std::string name;
    double balance;
  public:
    Account() {
      name = "None";
      balance = 0.0;
    }
    bool withdraw(double amount);
    bool deposit(double amount);
  };

In this case when no user information for initialization is provided we will use the default
constructor declared in public. It best practice to do this.

---------------------------------------------------------------------------------------
Account - no default constructor

  class Account {
  private:
    std::string name;
    double balance;
  public:
    Account(std::string name_val, double bal) {
      name = name_val;
      balance = bal;
    }
    bool withdraw(double amount);
    bool deposit(double amount);
  };

---------------------------------------------------------------------------------------
Using default constructor
  
  Account frank_account; //Error
  Account jim_account; //Error

  Account *mary_account = new Account; //Error
  delete mary_account;

  Account bill_account{"Bill", 15000.0}; //OK
