multiplying a pointer between 1-100 and a value between 1-100

  void multiply_with_pointer(int* ptr, int multiplier){
    if((*ptr > 0 && *ptr <= 100) && (multiplier > 0 && mutiplier <= 100))
      *ptr *= mutiplier;
  }

----------------------------------------------------------------
Return the maximum value of an array using pointers

  int find_max_element(int* arr, int size) {
    int max = *arr; //initialize max to the first element in the pointer location
    for(int i = 1; i < size; ++i) {
      if(*(arr + i) > max) //note the use of the offset notation
        mas = *(arr + i); //we can also sue subscript notation; pointer_name[index]
    }
    return max;
  }

----------------------------------------------------------------
Reverse an array using pointers

  void reverse_array(int* arr, int size) {
    int *start = arr;
    int *end = arr + size - 1;
    while(start < end) {
      //swap elements pointed to by start and end pointers
      int temp = *start;
      *start = *end;
      *end = temp;

      //move the pointers towards the center
      start++;
      end--;
    }
  }

----------------------------------------------------------------
Reverse a std::string using pointers

  #include <string>

  std::string reverse_string(const std::string &str){
    std::string reversed;
    
    const char* start = str.c_str(); //pointer to the first character
    const char* end = str.c_str() + str.size() - 1; //pointer to the last character

    while (end >= start) {
      reversed.push_back(*end); //Appende the character at the end pointer to the reversed string
      end--;
    }
    return reversed;
  }

